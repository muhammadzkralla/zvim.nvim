return {
    "nvimdev/dashboard-nvim",
    lazy = false, -- Prevent lazy-loading to properly handle stdin
    opts = function()
        local logo = [[
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïózzzz‚ñà‚ñà‚ïózzz‚ñà‚ñà‚ïózzzz‚ñà‚ñà‚ïózzzz‚ñà‚ñà‚ñà‚ïózzz‚ñà‚ñà‚ñà‚ïó
‚ïö‚ïê‚ïê‚ñà‚ñà‚ñà‚ïî‚ïùzzzz‚ñà‚ñà‚ïëzzz‚ñà‚ñà‚ïëzzzz‚ñà‚ñà‚ïëzzzz‚ñà‚ñà‚ñà‚ñà‚ïóz‚ñà‚ñà‚ñà‚ñà‚ïë
zz‚ñà‚ñà‚ñà‚ïî‚ïùzzzzz‚ñà‚ñà‚ïëzzz‚ñà‚ñà‚ïëzzzz‚ñà‚ñà‚ïëzzzz‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë
z‚ñà‚ñà‚ñà‚ïî‚ïùzzzzzz‚ïö‚ñà‚ñà‚ïóz‚ñà‚ñà‚ïî‚ïùzzzz‚ñà‚ñà‚ïëzzzz‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïózzzzz‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïùzzzzz‚ñà‚ñà‚ïëzzzz‚ñà‚ñà‚ïëz‚ïö‚ïê‚ïùz‚ñà‚ñà‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïùzzzzzz‚ïö‚ïê‚ïê‚ïê‚ïùzzzzzz‚ïö‚ïê‚ïùzzzz‚ïö‚ïê‚ïùzzzzz‚ïö‚ïê‚ïù

Configed by Z for Zcoding üëΩ
    ]]

        -- Adjusted ASCII art to align with the logo
        local additional_art = [[
    \'   ‚£¥‚£∂‚£§‚°§‚†¶‚£§‚£Ä‚£§‚†Ü     ‚£à‚£≠‚£≠‚£ø‚£∂‚£ø‚£¶‚£º‚£Ü         ',
    \'    ‚†â‚†ª‚¢ø‚£ø‚†ø‚£ø‚£ø‚£∂‚£¶‚†§‚†Ñ‚°†‚¢æ‚£ø‚£ø‚°ø‚†ã‚†â‚†â‚†ª‚£ø‚£ø‚°õ‚£¶       ',
    \'          ‚†à‚¢ø‚£ø‚£ü‚†¶ ‚£æ‚£ø‚£ø‚£∑‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†ª‚†ø‚¢ø‚£ø‚£ß‚£Ñ     ',
    \'           ‚£∏‚£ø‚£ø‚¢ß ‚¢ª‚†ª‚£ø‚£ø‚£∑‚£Ñ‚£Ä‚†Ñ‚†¢‚£Ä‚°Ä‚†à‚†ô‚†ø‚†Ñ    ',
    \'          ‚¢†‚£ø‚£ø‚£ø‚†à  ‚†°‚†å‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£õ‚£≥‚£§‚£Ä‚£Ä   ',
    \'   ‚¢†‚£ß‚£∂‚£•‚°§‚¢Ñ ‚£∏‚£ø‚£ø‚†ò‚†Ñ ‚¢Ä‚£¥‚£ø‚£ø‚°ø‚†õ‚£ø‚£ø‚£ß‚†à‚¢ø‚†ø‚†ü‚†õ‚†ª‚†ø‚†Ñ  ',
    \'  ‚£∞‚£ø‚£ø‚†õ‚†ª‚£ø‚£ø‚°¶‚¢π‚£ø‚£∑   ‚¢ä‚£ø‚£ø‚°è  ‚¢∏‚£ø‚£ø‚°á ‚¢Ä‚£†‚£Ñ‚£æ‚†Ñ   ',
    \' ‚£†‚£ø‚†ø‚†õ‚†Ñ‚¢Ä‚£ø‚£ø‚£∑‚†ò‚¢ø‚£ø‚£¶‚°Ä ‚¢∏‚¢ø‚£ø‚£ø‚£Ñ ‚£∏‚£ø‚£ø‚°á‚£™‚£ø‚°ø‚†ø‚£ø‚£∑‚°Ñ  ',
    \' ‚†ô‚†É   ‚£º‚£ø‚°ü  ‚†à‚†ª‚£ø‚£ø‚£¶‚£å‚°á‚†ª‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø ‚£ø‚£ø‚°á‚†Ñ‚†õ‚†ª‚¢∑‚£Ñ ',
    \'      ‚¢ª‚£ø‚£ø‚£Ñ   ‚†à‚†ª‚£ø‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü ‚†´‚¢ø‚£ø‚°Ü     ',
    \'       ‚†ª‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚¢Ä‚£Ä‚£§‚£æ‚°ø‚†É     ',
    ]]

        logo = string.rep("\n", 8) .. logo .. "\n" .. additional_art

        local opts = {
            theme = "doom",
            hide = {
                statusline = false,
            },
            config = {
                header = vim.split(logo, "\n"),
                center = {
                    { action = "lua require('telescope.builtin').oldfiles()", desc = " Recent Files", icon = "ÔÉÖ ", key = "r" },
                    { action = "lua require('telescope.builtin').live_grep()", desc = " Find Text", icon = "ÔÄ¢ ", key = "g" },
                    { action = "edit $MYVIMRC | source $MYVIMRC", desc = " Config", icon = "Ôê£ ", key = "c" },
                    { action = function() vim.cmd("qa") end, desc = " Quit", icon = "Ôê¶ ", key = "q" },
                },
                footer = function()
                    local stats = require("lazy").stats()
                    local ms = (math.floor(stats.startuptime * 100 + 0.5) / 100)
                    return { "‚ö° Neovim loaded " .. stats.loaded .. "/" .. stats.count .. " plugins in " .. ms .. "ms" }
                end,
            },
        }

        for _, button in ipairs(opts.config.center) do
            button.desc = button.desc .. string.rep(" ", 43 - #button.desc)
            button.key_format = "  %s"
        end

        -- open dashboard after closing lazy
        if vim.o.filetype == "lazy" then
            vim.api.nvim_create_autocmd("WinClosed", {
                pattern = tostring(vim.api.nvim_get_current_win()),
                once = true,
                callback = function()
                    vim.schedule(function()
                        vim.api.nvim_exec_autocmds("UIEnter", { group = "dashboard" })
                    end)
                end,
            })
        end

        return opts
    end,
}
